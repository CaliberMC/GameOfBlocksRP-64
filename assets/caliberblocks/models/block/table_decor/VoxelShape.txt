Stream.of(
Block.box(4.5, 0, 11, 5, 0.5, 11.5),
Block.box(5.5, 0, 10.5, 6, 11.5, 11),
Block.box(5, 0, 10, 5.5, 11.5, 10.5),
Block.box(4.5, 0, 9.5, 5, 11.5, 10),
Block.box(4, 0, 10, 4.5, 11.5, 10.5),
Block.box(3.5, 0, 10.5, 4, 11.5, 11),
Block.box(4, 0, 11, 4.5, 11.5, 11.5),
Block.box(4.5, 0, 11.5, 5, 11.5, 12),
Block.box(5, 0, 11, 5.5, 11.5, 11.5),
Block.box(4.5, 11.5, 10, 5, 12, 10.5),
Block.box(4.5, 11.5, 10.5, 5, 12, 11),
Block.box(4.5, 12, 10.5, 5, 14.5, 11),
Block.box(5, 11.5, 10.5, 5.5, 12, 11),
Block.box(4.5, 11.5, 11, 5, 12, 11.5),
Block.box(4, 11.5, 10.5, 4.5, 12, 11),
Block.box(4.5, 0, 10.5, 5, 0.5, 11),
Block.box(4.5, 0, 10, 5, 0.5, 10.5),
Block.box(5, 0, 10.5, 5.5, 0.5, 11),
Block.box(4, 0, 10.5, 4.5, 0.5, 11),
Block.box(9, 0, 10, 11.5, 0.5, 12.5),
Block.box(10, 0.5, 11, 10.5, 4, 11.5),
Block.box(9, 3.5, 10, 11.5, 4, 12.5),
Block.box(9, 4, 9.5, 11.5, 5.5, 10),
Block.box(9, 4, 12.5, 11.5, 5.5, 13),
Block.box(11.5, 4, 10, 12, 5.5, 12.5),
Block.box(8.5, 4, 10, 9, 5.5, 12.5),
Block.box(8.5, 5.5, 10, 9, 6.5, 12.5),
Block.box(11.5, 5.5, 10, 12, 6.5, 12.5),
Block.box(9, 5.5, 9.5, 11.5, 6.5, 10),
Block.box(9, 5.5, 12.5, 11.5, 6.5, 13),
Block.box(5.5, 5.5, 5, 6, 6.5, 7.5),
Block.box(6, 4, 4.5, 8.5, 5.5, 5),
Block.box(5.5, 4, 5, 6, 5.5, 7.5),
Block.box(8.5, 4, 5, 9, 5.5, 7.5),
Block.box(6, 4, 7.5, 8.5, 5.5, 8),
Block.box(6, 3.5, 5, 8.5, 4, 7.5),
Block.box(7, 0.5, 6, 7.5, 4, 6.5),
Block.box(6, 0, 5, 8.5, 0.5, 7.5),
Block.box(6, 5.5, 4.5, 8.5, 6.5, 5),
Block.box(6, 5.5, 7.5, 8.5, 6.5, 8),
Block.box(8.5, 5.5, 5, 9, 6.5, 7.5)
).reduce((v1, v2) -> VoxelShapes.join(v1, v2, IBooleanFunction.OR)).get();